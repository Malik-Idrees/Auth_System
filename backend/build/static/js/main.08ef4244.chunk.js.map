{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","className","to","role","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","SIGNUP_FAIL","SIGNUP_SUCCESS","ACTIVATION_SUCCESS","ACTIVATION_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","signup","re_password","console","log","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","checkAuthenticated","code","props","useEffect","children","initialState","access","combineReducers","action","setItem","refresh","user","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08ef4244.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n  <div className=\"container\">\r\n    <div className=\"jumbotron mt-5\">\r\n      <h1 className=\"display-4\">Welcome to Auth System!</h1>\r\n      <p className=\"lead\">Authentication System Built with Django and Djoser</p>\r\n      <hr className=\"my-4\" />\r\n      <p>Click The LogIn Button</p>\r\n      <p className=\"lead\">\r\n        <Link className=\"btn btn-primary btn-lg\" to=\"/login\" role=\"button\">\r\n          Login\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\r\nexport const USER_LOADED_FAIL = \"USER_LOADED_FAIL\";\r\n\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\r\nexport const ACTIVATION_FAIL = \"ACTIVATION_FAIL\";\r\n\r\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\r\nexport const AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";","import axios from \"axios\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  LOGOUT,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL, \r\n} from \"./types\";\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ token: localStorage.getItem('access')});\r\n\r\n    try{\r\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,config,body)\r\n      if(res.data.code !== 'token_not_valid'){\r\n        dispatch({\r\n        type: AUTHENTICATED_SUCCESS\r\n      })\r\n      }\r\n      else{\r\n        dispatch({\r\n        type: AUTHENTICATED_FAIL\r\n      })\r\n      }\r\n    } catch(err){\r\n      dispatch({\r\n        type: AUTHENTICATED_FAIL\r\n      })\r\n    }\r\n  }\r\n}\r\nexport const load_user = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        'Accept': 'application/json'\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: USER_LOADED_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: USER_LOADED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: USER_LOADED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios\r\n      .post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config)\r\n      \r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(load_user());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/`,\r\n      body,\r\n      config\r\n    );\r\n    console.log(\"res...\"+res.data);\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n  } catch (err) {\r\n    console.log(\"err...\"+err)\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({uid, token});\r\n\r\n  try {\r\n    await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ACTIVATION_SUCCESS,\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ACTIVATION_FAIL,\r\n    });\r\n  }\r\n}\r\n\r\nexport const reset_password = (email) => async dispatch =>{\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({email})\r\n\r\n  try{\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS,\r\n    });\r\n  }catch(err){\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAIL,\r\n    });\r\n  }\r\n}\r\n\r\nexport const reset_password_confirm = (uid,token,new_password,re_new_password) => async dispatch=>{\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.log(\"reset failed...\"+err)\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_FAIL,\r\n    });\r\n  }\r\n}\r\nexport const logout = () => dispatch => {\r\n  dispatch({\r\n    type: LOGOUT\r\n  })\r\n}","import React, {useState} from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {login} from '../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    login(email, password);\r\n  };\r\n\r\n  //Is the user Authenticated\r\n  //Redirect them to home page\r\n  if(isAuthenticated){\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Sign In</h1>\r\n      <p>Sign into your account</p>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary m-1\" type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-3\">\r\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </p>\r\n      <p className=\"mt-3\">\r\n        Forgot your password? <Link to=\"/reset-password\">Reset password</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    isAuthenticated : state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps,{ login })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { signup } from \"../actions/auth\";\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n  });\r\n\r\n  const { name, email, password, re_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(password === re_password){\r\n    signup(name, email, password, re_password);\r\n    setAccountCreated(true);\r\n}\r\n  };\r\n\r\n  //Is the user is Authenticated\r\n  //Redirect them to home page\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  if(accountCreated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"m-1\">Sign Up</h1>\r\n      <p className=\"m-1\">Create An Account</p>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"re_password\"\r\n            value={re_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary m-1\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-3 m-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { verify } from \"../actions/auth\";\r\n\r\nconst Activate = ({ match, verify }) => {\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  const verify_account = (e) => {\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n    verify(uid, token);\r\n    setVerified(true);\r\n  };\r\n\r\n  if (verified) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"d-flex flex-column justify-content-center align-items-center text-center\"\r\n        style={{ marginTop: \"220px\" }}\r\n      >\r\n        <h1>Verify Your Account</h1>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={verify_account}\r\n          type=\"button\"\r\n          style={{ marginTop: \"60px\" }}\r\n        >\r\n          verify\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { reset_password } from \"../actions/auth\";\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const { email } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    reset_password(email);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  //Is the password reset Email is sent\r\n  //Redirect them to home page\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Request Password Reset!</h1>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-primary m-1\" type=\"submit\">\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n  });\r\n\r\n  const { new_password, re_new_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n    //Checks to see if new_password and re_new_password matches! Otherwise send reset_password_confirm()\r\n    reset_password_confirm(uid, token, new_password, re_new_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  //Is the password is Resetted\r\n  //Redirect them to home page\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Reset Your Password!</h1>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control m-1 \"\r\n            type=\"password\"\r\n            placeholder=\"Confirm New Password\"\r\n            name=\"re_new_password\"\r\n            value={re_new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-primary m-1\" type=\"submit\">\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","import React, {Fragment}from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../actions/auth'\r\n\r\nconst Navbar = ({logout, isAuthenticated}) => {\r\n\r\n  const guestLinks = () => (\r\n    <Fragment>\r\n      <Link className=\"nav-item nav-link\" to=\"/login\">\r\n        Login\r\n      </Link>\r\n      <Link className=\"nav-item nav-link\" to=\"/signup\">\r\n        Sign Up\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n\r\n  const authLinks = () => (\r\n    <Link className=\"nav-item nav-link\" onClick={logout} to='/#'>\r\n      Logout\r\n    </Link>\r\n  );\r\nreturn(\r\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <Link className=\"navbar-brand\" to=\"/\">\r\n      Auth System\r\n    </Link>\r\n    <button\r\n      className=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarNavAltMarkup\"\r\n      aria-controls=\"navbarNavAltMarkup\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n      <div className=\"navbar-nav\">\r\n        <Link className=\"nav-item nav-link active\" to=\"/\">\r\n          Home <span className=\"sr-only\">(current)</span>\r\n        </Link>\r\n        {isAuthenticated ? authLinks() : guestLinks()}\r\n      </div>\r\n    </div>\r\n  </nav>\r\n);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated : state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps,{logout})(Navbar);\r\n","import React,{useEffect} from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport {connect} from 'react-redux';\r\nimport {checkAuthenticated, load_user} from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n    useEffect(()=>{\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    },[])\r\n\r\nreturn(\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n);\r\n}\r\nexport default connect(null,{load_user,checkAuthenticated})(Layout);\r\n\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  LOGOUT,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    access : localStorage.getItem('access'),\r\n    access : localStorage.getItem('access'),\r\n    isAuthenticated : null,\r\n    user : null,\r\n}\r\nexport default function(state=initialState,action){\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n      case AUTHENTICATED_SUCCESS:\r\n        return {\r\n          isAuthenticated: true,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        localStorage.setItem(\"access\", payload.access);\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          access: payload.access,\r\n          refresh: payload.refresh,\r\n        };\r\n      case SIGNUP_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: false,\r\n        };\r\n      case USER_LOADED_SUCCESS:\r\n        return {\r\n          ...state,\r\n          user: payload,\r\n        };\r\n      case AUTHENTICATED_FAIL:\r\n        return {\r\n          isAuthenticated: false,\r\n        };\r\n      case USER_LOADED_FAIL:\r\n        return {\r\n          ...state,\r\n          user: null,\r\n        };\r\n\r\n      case LOGIN_FAIL:\r\n      case SIGNUP_FAIL:\r\n      case LOGOUT:\r\n        localStorage.removeItem(\"access\");\r\n        localStorage.removeItem(\"refresh\");\r\n        return {\r\n          ...state,\r\n          access: null,\r\n          refresh: null,\r\n          isAuthenticated: false,\r\n          user: null,\r\n        };\r\n      case PASSWORD_RESET_SUCCESS:\r\n      case PASSWORD_RESET_FAIL:\r\n      case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n      case PASSWORD_RESET_CONFIRM_FAIL:\r\n      case ACTIVATION_SUCCESS:\r\n      case ACTIVATION_FAIL:\r\n        return {\r\n          ...state,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\nimport Activate from \"./containers/Activate\";\r\nimport ResetPassword from \"./containers/ResetPassword\";\r\nimport ResetPasswordConfirm from \"./containers/ResetPasswordConfirm\";\r\n\r\nimport Layout from './hocs/Layout';\r\n\r\nimport store from './store';\r\nimport {Provider} from 'react-redux';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            <Route exact path=\"/reset-password\" component={ResetPassword} />\r\n            <Route\r\n              exact\r\n              path=\"/password/reset/confirm/:uid/:token\"\r\n              component={ResetPasswordConfirm}\r\n            />\r\n            <Route exact path=\"/activate/:uid/:token\" component={Activate} />\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n// \"build\": \"rm -rf ../backend/build && react-scripts build && cp -r build ../backend/build\"\r\n// \"build\": \"react-scripts build\",","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}